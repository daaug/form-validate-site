import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { useState, FormEvent } from "react";
import { redirect } from 'next/navigation';
import { useRouter } from "next/router";

export default function Home() {

  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const [emailErrorMsg, setEmailErrorMsg] = useState(false);
  const [passwordErrorMsg, setPasswordErrorMsg] = useState(false);
  const [submitBtnEnabler, setSubmitBtnEnabler] = useState(false);

  const router = useRouter();

  function validateEmail(value: string) : void {
    if(value.search(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/g) < 0){
      setEmailErrorMsg(true)
    } else {
      setEmailErrorMsg(false)
      setEmail(value)
    }
  }

  function validatePassword(value: string) : void {
    if(value.length < 6){
      setPasswordErrorMsg(true)
    } else {
      setPasswordErrorMsg(false)
      setPassword(value)
    }
    validateSubmit()
  }

  function validateSubmit() : void {
    setSubmitBtnEnabler(
      emailErrorMsg == false && passwordErrorMsg == false ? false : true
    );
  }

  async function onSubmit(event: FormEvent<HTMLFormElement>){
    event.preventDefault()
    const res = await fetch('/api/submit', {
      method: 'POST',
      body: JSON.stringify({
        email: email,
        password: password
      })
    })
    if(res.ok){
      router.push({
        pathname: "/user",
        query: {
          email: email,
          password: password
        }
      })
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.container}>

        <h2 className={styles.title} >Login</h2>

        <form className={styles.form} onSubmit={onSubmit} >

          <label className="" >Email</label>
          <input 
            onChange={e => validateEmail(e.target.value)}
            className={styles.input}
            name="email"
            type="email" />
          {
            emailErrorMsg ?
              <p className={styles.errorMsg} >Email inválido.</p>
              : null
          }

          <label className="" >Senha</label>
          <input
            onChange={e => validatePassword(e.target.value)}
            className={styles.input}
            name="password"
            type="password" />

          {
            passwordErrorMsg ?
              <p className={styles.errorMsg} >Senha deve conter no mínimo 6 caracteres.</p>
              : null
          }

          <button 
            className={styles.submitBtn}
            type="submit" >Enviar</button>
        </form>

      </main>
    </>
  );
}
